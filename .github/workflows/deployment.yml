# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Deploy Chisa Discord Bot to VPS

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build image and upload it to VPS
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/arm64
        outputs: type=docker,name=chisa:latest,dest=./chisa.tar
    
    - name: Prepare SSH Key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
      shell: bash
    
    - name: Add VPS to Known Host
      run: |
        ssh-keyscan -p ${{ secrets.VPS_PORT }} -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts
      shell: bash

    - name: Upload image to VPS
      run: |
        scp -P ${{ secrets.VPS_PORT }} ./chisa.tar ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_HOST }}:${{ secrets.VPS_DESTINATION }}/chisa.tar
      shell: bash
    
  deploy:
    name: Load and Run Container on VPS
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Prepare SSH Key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
      shell: bash

    - name: Add VPS to Known Host
      run: |
        ssh-keyscan -p ${{ secrets.VPS_PORT }} -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts
      shell: bash
    
    - name: Load image and run container on VPS
      run: |
        ssh ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_HOST }} -p ${{ secrets.VPS_PORT }} \
        "docker load -i ${{ secrets.VPS_DESTINATION }}/chisa.tar && docker run -d --name chisa-dc --env-file ${{ secrets.CHISA_ENV }} chisa:latest"
      shell: bash
